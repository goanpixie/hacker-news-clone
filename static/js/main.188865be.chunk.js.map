{"version":3,"sources":["services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/selectors.js","styles/palette.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/App/styles.js","styles/mediaQueries.js","components/Loader/styles.js","components/Loader/index.js","components/App/App.js","components/App/index.js","styles/globals.js","store/app/actions.js","store/app/reducer.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","URL","TIMEOUT","HEADERS","Accept","client","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","type","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","hasMoreStoriesSelector","createSelector","state","story","length","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","theme","Title","h3","Host","span","ExternalLink","a","Description","div","CommentLink","LINK_REL","ListItem","kids","by","score","title","time","site","link","userUrl","href","rel","target","ListWrapper","styles","ul","props","List","key","Wrapper","h1","blink","keyframes","Animation","Loader","App","isFetching","fetchStoriesFirstPage","hasMoreStories","dataLength","next","hasMore","loader","style","height","overflow","Component","connect","GlobalStyles","createGlobalStyle","SET_THEME","app","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","configureStore","initialState","createStore","reducer","Boolean","window","location","match","console","log","store","ReactDOM","render","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.188865be.chunk.js","sourcesContent":["import axios from 'axios';\n\n//Default AIP will be your root\n\n\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n\t'Content-Type': 'application/json',\n\tAccept:'application/json',\n}\n\nclass ApiService {\n\tconstructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n\t\tconst client = axios.create({\n\t\t\tbaseURL,\n\t\t\ttimeout,\n\t\t\theaders,\n\t\t\tauth,\n\t\t});\n\n\t\tclient.interceptors.response.use(this.handleSuccess, this.handleError);\n\t\tthis.client = client;\n\t}\n\n\thandleSuccess(response) {\n\t\treturn response;\n\t}\n\n\thandleError(error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\tget(path) {\n\t\treturn this.client.get(path).then(response => response.data);\n\t}\n\n\tpost(path,payload) {\n\t\treturn this.client.post(path, payload).then(response => response.data);\n\t}\n\n\tput(path, payload) {\n\t\treturn this.client.put(path, payload).then(response => response.data);\n\t}\n\n\tpatch(path, payload) {\n\t\treturn this.client.patch(path, payload).then(response => response.data);\n\t}\n\n\tdelete(path) {\n\t\treturn this.client.delete(path).then(response=>response.data)\n\t}\n}\n\nexport default ApiService;","import ApiService from './Api';\n\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\nconst JSON_QUERY = '.json?print=pretty';\nconst PAGE_LIMIT = 20;\n\nconst hackerNewsApi = {};\n\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1 * limit) });\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n\tconst { begin, end } = getPageSlice(PAGE_LIMIT, page);\n\tconst activeIds = getPageValues({ begin, end, items: ids });\n\tconst storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n\treturn Promise.all(storyPromises);\n}\n\nexport default hackerNewsApi;","import hackerNewsApi from 'services/hackerNewsApi';\n\nconst NS = '@hnClove/story';\n\nexport const actionTypes = {\n\tFETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n\tFETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n\tFETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n\tFETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n\tFETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n\tFETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n}\n\nconst action = (type, payload) => ({ type, payload });\n\nconst actions = {\n\tfetchStoryIds: (payload = {}) => {\n\t\treturn dispatch => {\n\t\t\tdispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST), payload);\n\t\t\treturn hackerNewsApi\n\t\t\t\t.getTopStoryIds()\n\t\t\t\t.then(storyIds => {\n\t\t\t\t\tdispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\n\t\t\t\t\tdispatch(actions.fetchStories({ storyIds, page: 0 }));\n\t\t\t\t})\n\t\t\t\t.catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n\t\t}\n\t},\n\tfetchStories: (payload = {}) => {\n\t\treturn dispatch => {\n\t\t\tdispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n\t\t\tconst { storyIds, page } = payload;\n\n\t\t\treturn hackerNewsApi\n\t\t\t\t.getStoriesByPage(storyIds, page)\n\t\t\t\t.then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n\t\t\t\t.catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE,err)))\n\t\t}\n\t}\n}\n\nexport default actions;","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n\tstoryIdsSelector,\n\tstoriesSelector,\n\t(storyIds,stories) => storyIds.length>stories.length,\n)","export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n  return link;\n};\n\nexport default getArticleLink;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n  letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;","import React from 'react';\nimport Timeago from 'timeago.js';\nimport getSiteHostname from 'utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\n\n\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst LINK_REL = \"nofollow noreferrer noopener\";\n// const timeago = Timeago();\n\nconst ListItem = ({ kids=[], by , id, url, score, time, title, type }) => {\n  const site = getSiteHostname(url) || 'new.ycombinator.com';\n  const link = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n  const userUrl = `${HN_USER}${by}`;\n\n  return (\n    <Item>\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\n        <Title>\n          {title}<Host>({site})</Host>\n        </Title>\n      </ExternalLink>\n      <Description>\n        {score} points by{' '}\n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\n          {by}\n          {' | '}\n\t\t\t\t</CommentLink>\n\t\t\t\t1 hr ago\n\t\t\t\t{' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\n          {kids.length} Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  );\n};\n\nexport default ListItem;","import styles from 'styled-components';\nexport const ListWrapper = styles.ul`\nbackground-color: ${props => props.theme.backgroundSecondary};\nborder-radius:4px;\nmargin-left:auto;\nmargin-right:auto;\nmargin-bottom:20px;\ndisplay:flex;\nflex-direction:column;\n`","import React from 'react';\nimport ListItem from 'components/ListItem';\nimport { ListWrapper } from './styles';\n\nconst List = ({stories}) => (\n\t<ListWrapper>\n\t\t{stories.map(story => <ListItem {...story} key={story.id} />)}\n\t</ListWrapper>\n)\n\nexport default List;","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\nwidth:85%;\nmargin-left:auto;\nmargin-right:auto;\nheight:100%;\noverflow:hidden;\npadding-bottom:200px;\n\n${ tablet} {\n\twidth: 96 %;\n}\n`;\n\nexport const Title = styled.h1`\ncolor:${props=>props.theme.textSecondary};\nfont-size:20px;\nfont-weight:300;\nmargin-top:24px;\nmargin-bottom:26px;\n`;\n\n","export const mobile = '@media only screen and (max-width: 480px)';\nexport const tablet = '@media only screen and (max-width: 786px)';","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n0%{\n\topacity:.2\n}\n20%{\n\topacity:1;\n}\n100%{\n\topacity:.2\n}\n`\n\nexport const Animation = styled.div`\n  text-align: center;\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1;\n    /**\n    * Use the blink animation, which is defined above\n    */\n    animation-name: ${blink};\n    /**\n    * The total time of animation\n    */\n    animation-duration: 1s;\n    /**\n    * It will repeat itself forever\n    */\n    animation-iteration-count: infinite;\n    /**\n    * This makes sure that the starting style (opacity: .2)\n    * of the animation is applied before the animation starts.\n    * Otherwise we would see a short flash or would have\n    * to set the default styling of the dots to the same\n    * as the animation. Same applies for the ending styles.\n    */\n    animation-fill-mode: both;\n  }\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;","import React from 'react';\n\nimport { Animation } from './styles';\n\nconst Loader = () => (\n\t<Animation>\n\t\t<span>.</span>\n\t\t<span>.</span>\n\t\t<span>.</span>\n\t</Animation>\n)\n\nexport default Loader;","import React, {Component} from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { colorsDark } from 'styles/palette';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport List from 'components/List';\nimport { Title, Wrapper } from './styles';\nimport Loader from 'components/Loader';\n\nclass App extends Component {\n/*call function to load first page. Call it inside ComponentDidMount.\nDefault way to call function on page load*/\n\tcomponentDidMount() {\n\t\tthis.props.fetchStoriesFirstPage()\n\t}\n\n\tfetchStories = () => {\n\t\tconst { storyIds, page, fetchStories, isFetching } = this.props;\n\t\tif (!isFetching) {\n\t\t\tfetchStories({ storyIds, page });\n\t\t}\n\t}\n\n\trender() {\n\n\t\t/*get stories from props*/\n\t\tconst { stories, hasMoreStories } = this.props;\n\n\t\treturn (\n\t\t\t<ThemeProvider theme={colorsDark}>\n\t\t\t\t<div>\n\t\t\t\t\t<Wrapper>\n\t\t\t\t\t\t<Title>Hacker News for you!</Title>\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible',\n              }}\n            >\n\t\t\t\t\t\t\t<List stories={stories} />\n\t\t\t\t\t\t</InfiniteScroll>\n\t\t\t\t\t</Wrapper>\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;","import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selectors';\nimport App from './App';\n\n/*Connect function will take two arguements. Both these functions,\nmapStateToProps and mapDispatchToProps will return objects which\nit will then pass values as props to our components\n*/\n\n/*This is passing state as props using it as\ndata in your function*/\nconst mapStateToProps = state=> ({\n    stories: state.story.stories,\n    page: state.story.page,\n    storyIds: state.story.storyIds,\n    isFetching: state.story.isFetching,\n    hasMoreStories: hasMoreStoriesSelector(state),\n})\n\n/*used to trigger new actions inside our components.\nCreates special function which will allow\nour components to talk to redux store*/\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories:({storyIds, page}) => dispatch(actions.fetchStories({storyIds,page})),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n    * {\n      box-sizing: border-box;\n    }\n    html, body {\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\n      width: 100vw;\n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    a {\n      text-decoration: none;\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default GlobalStyles;","const NS = '@hnClone/app';\n\nexport const actionTypes = {\n\tSET_THEME: `${NS}/SET_THEME`,\n}\n\nconst actions = {\n\tsetTheme:(payload={})=>({type:actionTypes.SET_THEME,payload})\n}\n\nexport default actions;","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n\ttheme: 'dark'\n})\n\nconst app = (state = getInitialState(), { type, payload }) => {\n\tswitch (type) {\n\t\tcase actionTypes.SET_THEME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpayload,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default app;","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n\tstoryIds: [],\n\tstories: [],\n\tpage: 0,\n\tisFetching: false,\n\terror: '',\n});\n\nconst story = (state = getInitialState(), { type , payload }) => {\n\tswitch (type) {\n\t\tcase actionTypes.FETCH_STORY_IDS_REQUEST:\n\t\tcase actionTypes.FETCH_STORIES_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\tcase actionTypes.FETCH_STORY_IDS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t}\n\t\tcase actionTypes.FETCH_STORIES_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstories: [...state.stories, ...payload.stories],\n\t\t\t\tpage: state.page + 1,\n\t\t\t\tisFetching: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default story;","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n\tapp,\n\tstory,\n})\n\nexport default rootReducer;","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from  'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n\nif (!isProd) {\n\tmiddlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n\tconst store = createStore(reducer, initialState, middleware);\n\treturn store;\n}\n\nexport default configureStore;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport GlobalStyles from 'styles/globals';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport * as serviceWorker from './serviceWorker';\nimport hackerNewsApi from 'services/hackerNewsApi';\n\n\nhackerNewsApi.getTopStoryIds().then(ids => console.log(ids));\n\nconst renderApp = () => {\n\tconst initialState = {};\n\tconst store = configureStore(initialState);\n\n\tstore.dispatch({ type: '@hnClone/@@INIT' });\n\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<div>\n\t\t\t\t<GlobalStyles/>\n\t\t\t\t<App />\n\t\t\t</div>\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t);\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}